scheduler:
  module: dagster.core.scheduler
  class: DagsterDaemonScheduler

run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      hostname: ukcrawl-postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      hostname: ukcrawl-postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

event_log_storage:
  module: dagster_postgres.event_log
  class: PostgresEventLogStorage
  config:
    postgres_db:
      hostname: ukcrawl-postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

# python_logs:
#   dagster_handler_config:
#     handlers:
#       myHandler:
#         class: logging.FileHandler
#         level: INFO
#         filename: "data/dagster_logs.log"
#         mode: "a"
#         formatter: timeFormatter
#     formatters:
#       timeFormatter:
#         format: "%(asctime)s :: %(message)s"

telemetry:
  enabled: false
